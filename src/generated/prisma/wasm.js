
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  hashedPassword: 'hashedPassword',
  role: 'role',
  defaultDomain: 'defaultDomain',
  resellerTierId: 'resellerTierId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  suspensionUntil: 'suspensionUntil'
};

exports.Prisma.EmbyUserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  hashedPassword: 'hashedPassword',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResellerTierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  creditToDaysRate: 'creditToDaysRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditBalanceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  balance: 'balance',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditLogScalarFieldEnum = {
  id: 'id',
  actorUserId: 'actorUserId',
  delta: 'delta',
  reason: 'reason',
  targetUserId: 'targetUserId',
  createdAt: 'createdAt'
};

exports.Prisma.EmbyServerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  baseUrl: 'baseUrl',
  apiKey: 'apiKey',
  ownerUserId: 'ownerUserId',
  maxUsers: 'maxUsers',
  referenceUserId: 'referenceUserId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PackageScalarFieldEnum = {
  id: 'id',
  serverId: 'serverId',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PackageLibraryScalarFieldEnum = {
  id: 'id',
  packageId: 'packageId',
  libraryId: 'libraryId',
  libraryName: 'libraryName'
};

exports.Prisma.UserServerLinkScalarFieldEnum = {
  id: 'id',
  embyUserId: 'embyUserId',
  serverId: 'serverId',
  packageId: 'packageId',
  status: 'status',
  startAt: 'startAt',
  expireAt: 'expireAt',
  suspendedAt: 'suspendedAt',
  suspendedById: 'suspendedById',
  creditsAllocated: 'creditsAllocated',
  creditsUsed: 'creditsUsed',
  creditsRemaining: 'creditsRemaining',
  creditType: 'creditType',
  demoHours: 'demoHours',
  isDemo: 'isDemo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmbyAccountScalarFieldEnum = {
  id: 'id',
  embyUserId: 'embyUserId',
  serverId: 'serverId',
  embyUserIdInternal: 'embyUserIdInternal',
  embyUsername: 'embyUsername',
  userServerLinkId: 'userServerLinkId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPolicyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isTemplate: 'isTemplate',
  isAdministrator: 'isAdministrator',
  isHidden: 'isHidden',
  isDisabled: 'isDisabled',
  maxParentalRating: 'maxParentalRating',
  enableUserPreferenceAccess: 'enableUserPreferenceAccess',
  enableAudioPlaybackTranscoding: 'enableAudioPlaybackTranscoding',
  enableVideoPlaybackTranscoding: 'enableVideoPlaybackTranscoding',
  enablePlaybackRemuxing: 'enablePlaybackRemuxing',
  forceRemoteSourceTranscoding: 'forceRemoteSourceTranscoding',
  enableSyncTranscoding: 'enableSyncTranscoding',
  enableMediaConversion: 'enableMediaConversion',
  enableContentDownloading: 'enableContentDownloading',
  enableContentDeletion: 'enableContentDeletion',
  enableCameraUpload: 'enableCameraUpload',
  enableRemoteAccess: 'enableRemoteAccess',
  enableMediaPlayback: 'enableMediaPlayback',
  remoteClientBitrateLimit: 'remoteClientBitrateLimit',
  maxActiveSessions: 'maxActiveSessions',
  enableAllDevices: 'enableAllDevices',
  enableLiveTvManagement: 'enableLiveTvManagement',
  enableLiveTvAccess: 'enableLiveTvAccess',
  enableAllChannels: 'enableAllChannels',
  enableRemoteControlOfOtherUsers: 'enableRemoteControlOfOtherUsers',
  enableSharedDeviceControl: 'enableSharedDeviceControl',
  enablePublicSharing: 'enablePublicSharing',
  enableAllFolders: 'enableAllFolders',
  loginAttemptsBeforeLockout: 'loginAttemptsBeforeLockout',
  syncPlayAccess: 'syncPlayAccess',
  enableSchedule: 'enableSchedule',
  scheduleStart: 'scheduleStart',
  scheduleEnd: 'scheduleEnd',
  blockedTags: 'blockedTags',
  blockedMediaFolders: 'blockedMediaFolders',
  blockedChannels: 'blockedChannels',
  accessSchedules: 'accessSchedules',
  blockUnratedItems: 'blockUnratedItems',
  serverId: 'serverId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.RoleName = exports.$Enums.RoleName = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  TECH_ADMIN: 'TECH_ADMIN',
  PREMIUM_RESELLER: 'PREMIUM_RESELLER',
  ADVANCED_RESELLER: 'ADVANCED_RESELLER',
  BASIC_RESELLER: 'BASIC_RESELLER',
  READ_ONLY: 'READ_ONLY'
};

exports.AccountStatus = exports.$Enums.AccountStatus = {
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  EXPIRED: 'EXPIRED'
};

exports.Prisma.ModelName = {
  User: 'User',
  EmbyUser: 'EmbyUser',
  ResellerTier: 'ResellerTier',
  CreditBalance: 'CreditBalance',
  CreditLog: 'CreditLog',
  EmbyServer: 'EmbyServer',
  Package: 'Package',
  PackageLibrary: 'PackageLibrary',
  UserServerLink: 'UserServerLink',
  EmbyAccount: 'EmbyAccount',
  UserPolicy: 'UserPolicy'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/app/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/app/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ------------------------------------------------------------\n// Enums\n// ------------------------------------------------------------\n\nenum RoleName {\n  SUPER_ADMIN // Dueño del panel\n  TECH_ADMIN // Técnico general (sin creación de cuentas)\n  PREMIUM_RESELLER // Acceso completo por servidor(s), sin créditos\n  ADVANCED_RESELLER // Servidores compartidos, con sistema de créditos\n  BASIC_RESELLER // Servidores compartidos, créditos diferenciados\n  READ_ONLY // Solo lectura\n}\n\nenum AccountStatus {\n  ACTIVE\n  SUSPENDED\n  EXPIRED\n}\n\n// ------------------------------------------------------------\n// Modelos base de identidad y permisos\n// ------------------------------------------------------------\n\nmodel User {\n  id             String   @id @default(cuid())\n  email          String   @unique\n  name           String?\n  // Para auth con credenciales locales (si aplica)\n  hashedPassword String?\n  role           RoleName @default(READ_ONLY)\n\n  // Configuración de dominio para cuentas creadas\n  defaultDomain String? // Dominio por defecto para emails de cuentas creadas (ej: \"mydomain.com\")\n\n  // Relación con tier de reseller (si aplica)\n  resellerTierId String?\n  resellerTier   ResellerTier? @relation(fields: [resellerTierId], references: [id])\n\n  // Créditos del reseller/operador (no del usuario final de Emby)\n  creditBalance CreditBalance?\n\n  // Propiedad/gestión de servidores (si el usuario es admin/reseller dueño)\n  ownedServers EmbyServer[]\n\n  // Auditoría\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  isActive        Boolean   @default(true)\n  suspensionUntil DateTime?\n\n  // NOTA: Los enlaces a servidores ahora están en EmbyUser\n  // Los usuarios del panel (User) no tienen enlaces directos a servidores\n\n  // Relaciones inversas para auditoría y suspensiones\n  creditLogsAuthored CreditLog[]      @relation(\"CreditLog_actor\")\n  creditLogsTargeted CreditLog[]      @relation(\"CreditLog_TargetUser\")\n  suspendedLinks     UserServerLink[] @relation(\"SuspendedBy\")\n}\n\n// ------------------------------------------------------------\n// Usuarios del servidor Emby (usuarios finales)\n// ------------------------------------------------------------\n\nmodel EmbyUser {\n  id             String  @id @default(cuid())\n  email          String  @unique\n  name           String?\n  hashedPassword String?\n\n  // Relaciones con servidores\n  userServerLinks UserServerLink[]\n  embyAccounts    EmbyAccount[]\n\n  // Auditoría\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel ResellerTier {\n  id               String  @id @default(cuid())\n  name             String  @unique\n  description      String?\n  // Parámetros configurables por tier\n  // p.ej.: creditToDaysRate: 1 crédito = 30 días\n  creditToDaysRate Int     @default(30)\n\n  users     User[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel CreditBalance {\n  id        String   @id @default(cuid())\n  userId    String   @unique\n  user      User     @relation(fields: [userId], references: [id])\n  balance   Int      @default(0)\n  updatedAt DateTime @updatedAt\n}\n\nmodel CreditLog {\n  id          String @id @default(cuid())\n  actorUserId String // quién realiza la acción (admin/reseller)\n  actor       User   @relation(\"CreditLog_actor\", fields: [actorUserId], references: [id])\n\n  delta  Int // positivo o negativo\n  reason String?\n\n  // Opcional: objetivo de la acción (p.ej. asignación a un usuario final)\n  targetUserId String?\n  targetUser   User?   @relation(\"CreditLog_TargetUser\", fields: [targetUserId], references: [id])\n\n  createdAt DateTime @default(now())\n}\n\n// ------------------------------------------------------------\n// Servidores y paquetes (librerías) de Emby\n// ------------------------------------------------------------\n\nmodel EmbyServer {\n  id              String  @id @default(cuid())\n  name            String\n  baseUrl         String // https://emby.example.com\n  apiKey          String // API Key del servidor (gestiona el admin correspondiente)\n  ownerUserId     String? // dueño/gestor del servidor en el panel\n  owner           User?   @relation(fields: [ownerUserId], references: [id])\n  maxUsers        Int     @default(100) // Límite máximo de usuarios (incluyendo demos)\n  referenceUserId String? // ID del usuario de Emby cuyas políticas se usarán como plantilla\n\n  // Paquetes de este servidor\n  packages Package[]\n\n  // Enlaces usuarios-servidor\n  userLinks    UserServerLink[]\n  embyAccounts EmbyAccount[]\n\n  // Políticas del servidor\n  userPolicies UserPolicy[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Package {\n  id          String     @id @default(cuid())\n  serverId    String\n  server      EmbyServer @relation(fields: [serverId], references: [id])\n  name        String\n  description String?\n\n  libraries PackageLibrary[]\n  userLinks UserServerLink[]\n  createdAt DateTime         @default(now())\n  updatedAt DateTime         @updatedAt\n}\n\nmodel PackageLibrary {\n  id          String  @id @default(cuid())\n  packageId   String\n  package     Package @relation(fields: [packageId], references: [id])\n  // Identificadores de bibliotecas en Emby (podemos almacenar ID externo o nombre)\n  libraryId   String?\n  libraryName String?\n}\n\n// ------------------------------------------------------------\n// Vínculos entre usuarios del panel y el acceso en servidores Emby\n// ------------------------------------------------------------\n\nmodel UserServerLink {\n  id         String     @id @default(cuid())\n  embyUserId String\n  embyUser   EmbyUser   @relation(fields: [embyUserId], references: [id])\n  serverId   String\n  server     EmbyServer @relation(fields: [serverId], references: [id])\n\n  // Paquete asignado (qué librerías verá en Emby)\n  packageId String?\n  package   Package? @relation(fields: [packageId], references: [id])\n\n  status   AccountStatus @default(ACTIVE)\n  startAt  DateTime      @default(now())\n  expireAt DateTime?\n\n  // Control de suspensión/expiración (quién del panel suspendió)\n  suspendedAt   DateTime?\n  suspendedById String?\n  suspendedBy   User?     @relation(\"SuspendedBy\", fields: [suspendedById], references: [id])\n\n  // Sistema de créditos para tiempo de acceso\n  creditsAllocated Int @default(0) // Créditos asignados (1 crédito = 1 mes de acceso)\n  creditsUsed      Int @default(0) // Créditos utilizados\n  creditsRemaining Int @default(0) // Créditos restantes (calculado)\n\n  // Tipo de crédito (conexiones simultáneas permitidas)\n  creditType String @default(\"1_CONNECTION\") // \"1_CONNECTION\" o \"2_CONNECTIONS\"\n\n  // Sistema de horas para demos\n  demoHours Int? // Horas de acceso para demos (máximo 24)\n  isDemo    Boolean @default(false) // Indica si es una cuenta demo\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relación con EmbyAccount\n  embyAccount EmbyAccount?\n\n  @@unique([embyUserId, serverId])\n  @@index([embyUserId, serverId], name: \"idx_embyuser_server_unique\")\n}\n\n// Cuenta real de Emby por servidor, vinculada a un usuario del servidor\nmodel EmbyAccount {\n  id         String     @id @default(cuid())\n  embyUserId String\n  embyUser   EmbyUser   @relation(fields: [embyUserId], references: [id])\n  serverId   String\n  server     EmbyServer @relation(fields: [serverId], references: [id])\n\n  embyUserIdInternal String // ID interno de Emby\n  embyUsername       String\n\n  // Relación con UserServerLink\n  userServerLinkId String?         @unique\n  userServerLink   UserServerLink? @relation(fields: [userServerLinkId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([embyUserId, serverId])\n}\n\n// ------------------------------------------------------------\n// Políticas de usuario (configuración global)\n// ------------------------------------------------------------\n\nmodel UserPolicy {\n  id          String  @id @default(cuid())\n  name        String  @unique // Nombre descriptivo de la política\n  description String? // Descripción de qué hace esta política\n  isTemplate  Boolean @default(false) // Si es una plantilla base\n\n  // Configuraciones básicas de Emby\n  isAdministrator            Boolean @default(false)\n  isHidden                   Boolean @default(false)\n  isDisabled                 Boolean @default(false)\n  maxParentalRating          Int     @default(0)\n  enableUserPreferenceAccess Boolean @default(true)\n\n  // Configuraciones de transcoding\n  enableAudioPlaybackTranscoding Boolean @default(true)\n  enableVideoPlaybackTranscoding Boolean @default(true)\n  enablePlaybackRemuxing         Boolean @default(true)\n  forceRemoteSourceTranscoding   Boolean @default(false)\n  enableSyncTranscoding          Boolean @default(false)\n  enableMediaConversion          Boolean @default(false)\n\n  // Configuraciones de descarga\n  enableContentDownloading Boolean @default(false)\n  enableContentDeletion    Boolean @default(false)\n\n  // Configuraciones de carga\n  enableCameraUpload Boolean @default(false) // Permitir carga de cámara\n\n  // Configuraciones de streaming\n  enableRemoteAccess       Boolean @default(true)\n  enableMediaPlayback      Boolean @default(true)\n  remoteClientBitrateLimit Int     @default(0)\n\n  // Configuraciones de dispositivos\n  maxActiveSessions Int     @default(0) // 0 = sin límite\n  enableAllDevices  Boolean @default(true)\n\n  // Configuraciones de Live TV\n  enableLiveTvManagement Boolean @default(false)\n  enableLiveTvAccess     Boolean @default(false)\n  enableAllChannels      Boolean @default(true)\n\n  // Configuraciones de control\n  enableRemoteControlOfOtherUsers Boolean @default(false)\n  enableSharedDeviceControl       Boolean @default(false)\n\n  // Configuraciones de acceso\n  enablePublicSharing Boolean @default(false)\n  enableAllFolders    Boolean @default(true)\n\n  // Configuraciones de seguridad\n  loginAttemptsBeforeLockout Int @default(-1) // -1 = sin límite\n\n  // Configuraciones de SyncPlay\n  syncPlayAccess String @default(\"CreateAndJoinGroups\")\n\n  // Configuraciones de horarios (opcional)\n  enableSchedule Boolean @default(false)\n  scheduleStart  String? // Hora de inicio (HH:MM)\n  scheduleEnd    String? // Hora de fin (HH:MM)\n\n  // Campos JSON para configuraciones complejas\n  blockedTags         String? // JSON array\n  blockedMediaFolders String? // JSON array\n  blockedChannels     String? // JSON array\n  accessSchedules     String? // JSON array\n  blockUnratedItems   String? // JSON array\n\n  // Relación con servidor\n  serverId String?\n  server   EmbyServer? @relation(fields: [serverId], references: [id])\n\n  // Auditoría\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([serverId])\n}\n",
  "inlineSchemaHash": "12db6a96f05fcddc5fff4e1cc7e2b3b2fd6625029f85de4f0d1edf557fa3b3c5",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"RoleName\"},{\"name\":\"defaultDomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resellerTierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resellerTier\",\"kind\":\"object\",\"type\":\"ResellerTier\",\"relationName\":\"ResellerTierToUser\"},{\"name\":\"creditBalance\",\"kind\":\"object\",\"type\":\"CreditBalance\",\"relationName\":\"CreditBalanceToUser\"},{\"name\":\"ownedServers\",\"kind\":\"object\",\"type\":\"EmbyServer\",\"relationName\":\"EmbyServerToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"suspensionUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creditLogsAuthored\",\"kind\":\"object\",\"type\":\"CreditLog\",\"relationName\":\"CreditLog_actor\"},{\"name\":\"creditLogsTargeted\",\"kind\":\"object\",\"type\":\"CreditLog\",\"relationName\":\"CreditLog_TargetUser\"},{\"name\":\"suspendedLinks\",\"kind\":\"object\",\"type\":\"UserServerLink\",\"relationName\":\"SuspendedBy\"}],\"dbName\":null},\"EmbyUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userServerLinks\",\"kind\":\"object\",\"type\":\"UserServerLink\",\"relationName\":\"EmbyUserToUserServerLink\"},{\"name\":\"embyAccounts\",\"kind\":\"object\",\"type\":\"EmbyAccount\",\"relationName\":\"EmbyAccountToEmbyUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ResellerTier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditToDaysRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResellerTierToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CreditBalance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreditBalanceToUser\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CreditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actorUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreditLog_actor\"},{\"name\":\"delta\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreditLog_TargetUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EmbyServer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmbyServerToUser\"},{\"name\":\"maxUsers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referenceUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packages\",\"kind\":\"object\",\"type\":\"Package\",\"relationName\":\"EmbyServerToPackage\"},{\"name\":\"userLinks\",\"kind\":\"object\",\"type\":\"UserServerLink\",\"relationName\":\"EmbyServerToUserServerLink\"},{\"name\":\"embyAccounts\",\"kind\":\"object\",\"type\":\"EmbyAccount\",\"relationName\":\"EmbyAccountToEmbyServer\"},{\"name\":\"userPolicies\",\"kind\":\"object\",\"type\":\"UserPolicy\",\"relationName\":\"EmbyServerToUserPolicy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Package\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"server\",\"kind\":\"object\",\"type\":\"EmbyServer\",\"relationName\":\"EmbyServerToPackage\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"libraries\",\"kind\":\"object\",\"type\":\"PackageLibrary\",\"relationName\":\"PackageToPackageLibrary\"},{\"name\":\"userLinks\",\"kind\":\"object\",\"type\":\"UserServerLink\",\"relationName\":\"PackageToUserServerLink\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PackageLibrary\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"Package\",\"relationName\":\"PackageToPackageLibrary\"},{\"name\":\"libraryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"libraryName\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"UserServerLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embyUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embyUser\",\"kind\":\"object\",\"type\":\"EmbyUser\",\"relationName\":\"EmbyUserToUserServerLink\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"server\",\"kind\":\"object\",\"type\":\"EmbyServer\",\"relationName\":\"EmbyServerToUserServerLink\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"Package\",\"relationName\":\"PackageToUserServerLink\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AccountStatus\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expireAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"suspendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"suspendedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suspendedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SuspendedBy\"},{\"name\":\"creditsAllocated\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsRemaining\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"demoHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDemo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"embyAccount\",\"kind\":\"object\",\"type\":\"EmbyAccount\",\"relationName\":\"EmbyAccountToUserServerLink\"}],\"dbName\":null},\"EmbyAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embyUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embyUser\",\"kind\":\"object\",\"type\":\"EmbyUser\",\"relationName\":\"EmbyAccountToEmbyUser\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"server\",\"kind\":\"object\",\"type\":\"EmbyServer\",\"relationName\":\"EmbyAccountToEmbyServer\"},{\"name\":\"embyUserIdInternal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embyUsername\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userServerLinkId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userServerLink\",\"kind\":\"object\",\"type\":\"UserServerLink\",\"relationName\":\"EmbyAccountToUserServerLink\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserPolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isTemplate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isAdministrator\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isHidden\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isDisabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maxParentalRating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enableUserPreferenceAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableAudioPlaybackTranscoding\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableVideoPlaybackTranscoding\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enablePlaybackRemuxing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"forceRemoteSourceTranscoding\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableSyncTranscoding\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableMediaConversion\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableContentDownloading\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableContentDeletion\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableCameraUpload\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableRemoteAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableMediaPlayback\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"remoteClientBitrateLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxActiveSessions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enableAllDevices\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableLiveTvManagement\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableLiveTvAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableAllChannels\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableRemoteControlOfOtherUsers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableSharedDeviceControl\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enablePublicSharing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableAllFolders\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"loginAttemptsBeforeLockout\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"syncPlayAccess\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enableSchedule\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scheduleStart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduleEnd\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blockedTags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blockedMediaFolders\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blockedChannels\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessSchedules\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blockUnratedItems\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"server\",\"kind\":\"object\",\"type\":\"EmbyServer\",\"relationName\":\"EmbyServerToUserPolicy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

